/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

class Solution {
    public ListNode reverseList(ListNode head) {
        
        if(head==null )return null;

        ListNode current=head;
        ListNode prev=null;

        while(current!=null)
        {
            ListNode node= current.next;
            current.next=prev;
            prev=current;
            current=node;

        }
return prev;
    //     if(head==null) return null;
    //     Stack <ListNode>st=new Stack<>();
    //     ListNode temp=head;
        
    //     while(temp!=null)
    //     {
    //         st.push(temp);
    //         temp=temp.next;
    //     }

    //     ListNode newHead=st.pop();
    //     ListNode current=newHead;
    //     while(!st.isEmpty())
    //     {
    //        ListNode node=st.pop();
    //        current.next=node;
    //        current=node;

    //     }
    //    current.next=null;
       
    //     return newHead;


    }
}

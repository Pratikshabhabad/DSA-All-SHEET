class Solution {
    public void nextPermutation(int[] nums) {
        
        int n=nums.length;
        int largestIdx=-1;

        for(int i=nums.length-2;i>=0;i--)
        {
            if(nums[i]<nums[i+1])
            {
                largestIdx=i;
                break;
            }
        }

        if(largestIdx ==-1)
        {
            reverse(nums,0,n-1);
            return;
        }
        int anotherPointer=-1;
        for(int i=n-1;i>largestIdx;i--)
        {
            if(nums[i]>nums[largestIdx])
            {
                anotherPointer=i;
                break;
            }
        }

        swap(nums, anotherPointer,largestIdx);

        reverse(nums,largestIdx+1,n-1);
    }
    private void swap(int nums[],int i, int j)
    {
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }
    private void reverse(int nums[],int st,int end)
    {
        while(st<end)
        {
            swap(nums,st,end);
            st++;
            end--;
        }
       
    }
}
